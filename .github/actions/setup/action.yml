---
name: 🍽 Setup boilerplate
inputs:
  os:
    required: true
    description: Operating system
  ruby_version:
    required: true
    description: Ruby version
  rust_toolchain:
    required: true
    description: Rust toolchain
outputs: {}
runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v2
    - uses: ruby/setup-ruby-pkgs@v1
      if: inputs.ruby_version != 'skip'
      with:
        ruby-version: ${{ inputs.ruby_version }}
        bundler-cache: true
        mingw: clang
    - name: Bundle install
      if: inputs.ruby_version == 'skip'
      shell: bash
      run: bundle install -j3
    - name: 🐛 Print debug info
      run: |
        echo "Printing rbconfig..."
        echo "======================"
        ruby -rrbconfig -ryaml -e 'puts RbConfig::CONFIG.to_yaml'
      shell: bash

    - name: Set LIBCLANG_PATH
      run: echo "LIBCLANG_PATH=$((gcm clang).source -replace "clang.exe")" >> $env:GITHUB_ENV
      if: contains(inputs.os, 'windows')
      shell: pwsh

    - name: ⚡ Cache
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
          examples/rust_reverse/tmp/
        key: ${{ inputs.os }}-${{ inputs.ruby_version }}-${{ inputs.rust_toolchain }}-cargo-v5-${{ hashFiles('**/Cargo.lock', '**/extconf.rb') }}

    - uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ inputs.rust_toolchain }}
        default: true
